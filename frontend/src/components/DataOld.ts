// Generated by https://quicktype.io

export interface DataOld {
  TextName: string;
  TextLen: number;
  DictName: string;
  DictLen: number;
  Single: boolean;
  Basic: Basic;
  Words: Collision;
  Collision: Collision;
  CodeLen: CodeLen;
  Keys: { [key: string]: CountRate };
  Combs: Combs;
  Fingers: Fingers;
  Hands: Hands;
}

export interface Basic {
  NotHan: string;
  NotHans: number;
  NotHanCount: number;
  Lack: string;
  Lacks: number;
  LackCount: number;
  Commits: number;
}

export interface CodeLen {
  Total: number;
  PerChar: number;
  Dist: number[];
}

export interface Collision {
  Commits: CountRate;
  Chars: CountRate;
  Dist: number[];
  FirstCount?: number;
}

export interface CountRate {
  Count: number;
  Rate: number;
}

export interface Combs {
  Count: number;
  Equivalent: number;
  DoubleHit: CountRate;
  TribleHit: CountRate;
  SingleSpan: CountRate;
  MultiSpan: CountRate;
  LongFingersDisturb: CountRate;
  LittleFingersDisturb: CountRate;
}

export interface Fingers {
  Dist: CountRate[];
  Same: CountRate;
  Diff: CountRate;
}

export interface Hands {
  Left: CountRate;
  Right: CountRate;
  Same: CountRate;
  Diff: CountRate;
  LeftToLeft: CountRate;
  LeftToRight: CountRate;
  RightToLeft: CountRate;
  RightToRight: CountRate;
}
